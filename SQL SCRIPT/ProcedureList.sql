-- Đối tác, tài xế cập nhật tình trạng 1 đơn hàng --
CREATE PROCEDURE sp_CapNhatDon @MADONHANG VARCHAR(10), @TINHTRANG NVARCHAR(20)
AS
BEGIN TRAN
	IF @TINHTRANG NOT IN(N'Chờ nhận', N'Đang chuẩn bị', N'Đang vận chuyển', N'Hoàn tất')
	BEGIN
		RAISERROR(N'Tình trạng không hợp lệ', 16, 1)
		ROLLBACK TRAN
		RETURN 0
	END

	IF @MADONHANG NOT IN (
		SELECT MADONHANG
		FROM DONHANG 
	)
	BEGIN
		RAISERROR(N'Mã đơn không tồn tại', 16, 1)
		ROLLBACK TRAN
		RETURN 0
	END

	UPDATE DONHANG
	SET TINHTRANG = @TINHTRANG
	WHERE MADONHANG = @MADONHANG
	COMMIT TRAN
	RETURN 1
GO

-- khách hàng thực hiện hủy 1 đơn hàng --
CREATE PROCEDURE sp_HuyDon @MADONHANG VARCHAR(10)
AS
BEGIN TRAN
	IF @MADONHANG NOT IN (
		SELECT MADONHANG 
		FROM DONHANG
		WHERE MADONHANG = @MADONHANG
	)	
	BEGIN
		RAISERROR(N'Đơn hàng không tồn tại!!!', 16, 1)
		ROLLBACK TRAN
		RETURN 0
	END

	IF EXISTS (
		SELECT * FROM DONHANG
		WHERE MADONHANG = @MADONHANG AND TINHTRANG IN (N'Đang chuẩn bị', N'Đang vận chuyển', N'Hoàn tất')
	)
	BEGIN
		RAISERROR(N'Không thể hủy đơn!!!', 16, 1)
		ROLLBACK TRAN
		RETURN 0
	END

	UPDATE DONHANG
	SET TINHTRANG = N'Đã hủy', TONGTIEN = 0
	WHERE MADONHANG = @MADONHANG 
	COMMIT TRAN
	RETURN 1
GO

-- Phantom KH: xem thực đơn, DT: xóa, thêm món --
CREATE PROCEDURE sp_XoaMonPhanTom @MACHINHANH VARCHAR(10), @TENMONAN NVARCHAR(20)
AS
BEGIN TRAN
SET TRAN ISOLATION LEVEL READ COMMITTED
	IF @MACHINHANH NOT IN (
		SELECT MACHINHANH
		FROM CHINHANH
	)
	BEGIN 
		PRINT N'Chi nhánh này không tồn tại'
		ROLLBACK TRAN
		RETURN 0
	END

	IF @TENMONAN NOT IN (
		SELECT TENMON
		FROM MONAN
	)
	BEGIN
		PRINT N'Không tồn tại món ăn này trong database nên không thể xóa được'
		ROLLBACK TRAN
		RETURN 0
	END
	
	DELETE THUCDON WHERE MACHINHANH = @MACHINHANH AND TENMONAN = @TENMONAN
	COMMIT TRAN
	RETURN 1
GO

CREATE PROCEDURE sp_ThemMonPhanTom @MACHINHANH VARCHAR(10), @TENMONAN NVARCHAR(20) 
AS
SET TRAN ISOLATION LEVEL READ COMMITTED
BEGIN TRAN
	IF @TENMONAN IN (
		SELECT TENMONAN
		FROM THUCDON
		WHERE MACHINHANH = @MACHINHANH
	)
	BEGIN
		RAISERROR(N'Món ăn đã có trong thực đơn của chi nhánh này', 16, 1)
		ROLLBACK TRAN
		RETURN 0
	END

	INSERT INTO THUCDON VALUES(@MACHINHANH, @TENMONAN)
	COMMIT
	RETURN 1
GO

CREATE PROCEDURE sp_XemMonAnPhantom @MACHINHANH VARCHAR(10)
AS
BEGIN TRAN
SET TRAN ISOLATION LEVEL READ COMMITTED
	IF @MACHINHANH NOT IN (
		SELECT MACHINHANH FROM THUCDON
	)
	BEGIN
		RAISERROR(N'Thực đơn không thuộc về chi nhánh này!!!', 16, 1)
		ROLLBACK 
		RETURN 0
	END

	WAITFOR DELAY '00:00:05'
	SELECT * FROM THUCDON, MONAN 
	WHERE TENMONAN = TENMON AND MACHINHANH = @MACHINHANH
	
	COMMIT TRAN
	RETURN 1
GO

-- FIX LỖI ĐỌC PHANTOM -- 
CREATE PROCEDURE sp_XemMonAnPhantomFix @MACHINHANH VARCHAR(10)
AS
BEGIN TRAN
SET TRAN ISOLATION LEVEL SERIALIZABLE
	IF @MACHINHANH NOT IN (
		SELECT MACHINHANH FROM THUCDON, MONAN 
		WHERE TENMONAN = TENMON AND MACHINHANH = @MACHINHANH
	)
	BEGIN
		RAISERROR(N'Thực đơn không thuộc về chi nhánh này!!!', 16, 1)
		ROLLBACK 
		RETURN 0
	END

	WAITFOR DELAY '00:00:05'
	SELECT * FROM THUCDON, MONAN 
	WHERE TENMONAN = TENMON AND MACHINHANH = @MACHINHANH
	
	COMMIT TRAN
	RETURN 1
GO

-- DIRTY READ KH: Xem đơn, DT, TX: cập nhật đơn --
CREATE PROCEDURE sp_XemDonDirty @MAKHACHHANG VARCHAR(10)
AS
BEGIN TRAN
SET TRAN ISOLATION LEVEL READ UNCOMMITTED
	WAITFOR DELAY '00:00:05'

	SELECT * FROM DONHANG 
	WHERE KHACHHANG = @MAKHACHHANG
	COMMIT TRAN
	RETURN 1
GO

CREATE PROCEDURE sp_CapNhatDonDirty @MADONHANG VARCHAR(10), @TINHTRANG NVARCHAR(20)
AS
BEGIN TRAN
SET TRAN ISOLATION LEVEL READ COMMITTED
IF @TINHTRANG NOT IN(N'Chờ nhận', N'Đang chuẩn bị', N'Đang vận chuyển', N'Hoàn tất')
	BEGIN
		RAISERROR(N'Tình trạng không hợp lệ', 16, 1)
		ROLLBACK TRAN
		RETURN 0
	END

	IF @MADONHANG NOT IN (
		SELECT MADONHANG
		FROM DONHANG 
	)
	BEGIN
		RAISERROR(N'Mã đơn không tồn tại', 16, 1)
		ROLLBACK TRAN
		RETURN 0
	END

	UPDATE DONHANG
	SET TINHTRANG = @TINHTRANG
	WHERE MADONHANG = @MADONHANG

	WAITFOR DELAY '00:00:05'
	ROLLBACK TRAN
	RETURN 1
GO

-- PROC FIX DIRTY READ KHACHHANG - DOITAC -- 
CREATE PROCEDURE sp_XemDonDirtyFix @MAKHACHHANG VARCHAR(10)
AS
BEGIN TRAN
SET TRAN ISOLATION LEVEL READ COMMITTED
	WAITFOR DELAY '00:00:05'

	SELECT * FROM DONHANG 
	WHERE KHACHHANG = @MAKHACHHANG
	COMMIT TRAN
	RETURN 1
GO 

CREATE PROCEDURE sp_CapNhatDonDirtyFix @MADONHANG VARCHAR(10), @TINHTRANG NVARCHAR(20)
AS
BEGIN TRAN
SET TRAN ISOLATION LEVEL READ COMMITTED
	IF @TINHTRANG NOT IN(N'Chờ nhận', N'Đang chuẩn bị', N'Đang vận chuyển', N'Hoàn tất')
	BEGIN
		RAISERROR(N'Tình trạng không hợp lệ', 16, 1)
		ROLLBACK TRAN
		RETURN 0
	END

	IF @MADONHANG NOT IN (
		SELECT MADONHANG
		FROM DONHANG 
	)
	BEGIN
		RAISERROR(N'Mã đơn không tồn tại', 16, 1)
		ROLLBACK TRAN
		RETURN 0
	END

	UPDATE DONHANG
	SET TINHTRANG = @TINHTRANG
	WHERE MADONHANG = @MADONHANG

	WAITFOR DELAY '00:00:05'
	ROLLBACK TRAN
	RETURN 1
GO

-- UNREPEATABLE READ NV: gia hạn hợp đồng, DT: Xem hợp đồng --
CREATE PROC sp_CapNhatHopDongUnrepeat @MAHOPDONG VARCHAR(10), @PTHOAHONG FLOAT, @TG_HIEULUC DATETIME 
AS
BEGIN TRAN
SET TRAN ISOLATION LEVEL READ UNCOMMITTED		
	IF @PTHOAHONG > 1 OR @PTHOAHONG <= 0
	BEGIN
		PRINT N'Phần trăm hoa hồng không hợp lệ'
		ROLLBACK TRAN
		RETURN 1
	END

	IF @TG_HIEULUC < 
	(
		SELECT TG_HIEULUC FROM HOPDONG 
		WHERE MAHOPDONG = @MAHOPDONG
	)
	BEGIN
		PRINT N'Thời gian cập nhật hợp đồng không được nhỏ hơn thời gian hiệu lực hiện tại'
		ROLLBACK TRAN 
		RETURN 1
	END

	-- CẬP NHẬT LẠI TG_HIEULUC CỦA HỢP ĐỒNG VÀ % HOA HỒNG HIỆN TẠI CỦA CÔNG TY THEO MÃ NHÂN VIÊN XỬ LÍ
	UPDATE HOPDONG
	SET PT_HOAHONG = @PTHOAHONG, TG_HIEULUC = @TG_HIEULUC
	WHERE MAHOPDONG = @MAHOPDONG
	COMMIT TRAN
	RETURN 0
GO

CREATE PROCEDURE sp_XemHopDongUnrepeat @MAHOPDONG NVARCHAR(10)
AS
BEGIN TRAN
	SET TRAN ISOLATION LEVEL READ COMMITTED
	BEGIN TRY
		IF @MAHOPDONG NOT IN (
			SELECT MAHOPDONG FROM HOPDONG
		)
		BEGIN
			RAISERROR(N'Hợp đồng không tồn tại', 16,1)
			ROLLBACK
			RETURN 1
		END
		-- XEM TẤT CẢ HỢP ĐỒNG THUỘC QUYỀN XỬ LÍ CỦA NHÂN VIÊN --
		WAITFOR DELAY '00:00:05'

		SELECT * FROM HOPDONG
		WHERE MAHOPDONG = @MAHOPDONG
	END TRY
		
	BEGIN CATCH
		PRINT N'LỖI HỆ THỐNG'
		ROLLBACK TRAN
	END CATCH
COMMIT TRAN
RETURN 0
GO

-- FIX LỖI REPEATABLE READ
CREATE PROCEDURE sp_XemHopDongUnrepeatFix @MAHOPDONG VARCHAR(10)
AS
BEGIN TRAN
SET TRAN ISOLATION LEVEL REPEATABLE READ
	BEGIN TRY
		IF @MAHOPDONG NOT IN (
			SELECT MAHOPDONG FROM HOPDONG
		)
		BEGIN
			RAISERROR(N'Hợp đồng không tồn tại', 16,1)
			ROLLBACK
			RETURN 1
		END
		-- XEM TẤT CẢ HỢP ĐỒNG THUỘC QUYỀN XỬ LÍ CỦA NHÂN VIÊN --
		WAITFOR DELAY '00:00:05'

		SELECT * FROM HOPDONG
		WHERE MAHOPDONG = @MAHOPDONG
	END TRY
		
	BEGIN CATCH
		PRINT N'LỖI HỆ THỐNG'
		ROLLBACK TRAN
	END CATCH
COMMIT TRAN
RETURN 0
GO

-- LOST UPDATE KH: Hủy đơn, DT: Cập nhật đơn --
CREATE PROCEDURE sp_HuyDonLostUpdate @MADONHANG VARCHAR(10)
AS
BEGIN TRAN
SET TRAN ISOLATION LEVEL READ COMMITTED
	IF EXISTS(
		SELECT * FROM DONHANG
		WHERE MADONHANG = @MADONHANG AND TINHTRANG IN (N'Đang chuẩn bị', N'Đang vận chuyển', N'Hoàn tất')
	)
	BEGIN
		PRINT N'Đơn hàng ' + @MADONHANG + N' đã được tiếp nhận và xử lí nên không thể hủy được'
		ROLLBACK TRAN
		RETURN 0
	END

	-- để test -- 
	WAITFOR DELAY '00:00:05'

	IF EXISTS (
		SELECT * FROM DONHANG
		WHERE MADONHANG = @MADONHANG AND TINHTRANG = N'Đang chuẩn bị'
	)
	BEGIN
		RAISERROR(N'Đơn hàng đã chuẩn bị không thể hủy!!!', 16, 1)
		ROLLBACK
		RETURN 0
	END

	UPDATE DONHANG
	SET TINHTRANG = N'Đã Hủy', TONGTIEN = 0
	WHERE MADONHANG = @MADONHANG

	COMMIT TRAN
	RETURN 1
GO

CREATE PROCEDURE sp_CapNhatDonLostUpdate @MADONHANG VARCHAR(10), @TINHTRANG NVARCHAR(20)
AS
BEGIN TRAN
SET TRAN ISOLATION LEVEL READ COMMITTED
	DECLARE @TONGTIEN FLOAT
	DECLARE @TINHTRANG_HT NVARCHAR(20)
	SELECT @TONGTIEN = TONGTIEN, @TINHTRANG_HT = TINHTRANG
	FROM DONHANG
	WHERE MADONHANG = @MADONHANG

	UPDATE DONHANG
	SET TINHTRANG = @TINHTRANG, TONGTIEN = @TONGTIEN
	WHERE MADONHANG = @MADONHANG
	COMMIT TRAN
	RETURN 1
GO

-- LOST UPDATE FIXX
CREATE PROCEDURE sp_HuyDonLostUpdateFix @MADONHANG VARCHAR(10)
AS
BEGIN TRAN
SET TRAN ISOLATION LEVEL REPEATABLE READ
	IF EXISTS(
		SELECT * FROM DONHANG
		WHERE MADONHANG = @MADONHANG AND TINHTRANG IN (N'Đang chuẩn bị', N'Đang vận chuyển', N'Hoàn tất')
	)
	BEGIN
		PRINT N'Đơn hàng ' + @MADONHANG + N' đã được tiếp nhận và xử lí nên không thể hủy được'
		ROLLBACK TRAN
		RETURN 0
	END

	DECLARE @TINHTRANG_HT NVARCHAR(20)
	SELECT @TINHTRANG_HT = TINHTRANG
	FROM DONHANG
	WHERE MADONHANG = @MADONHANG

	-- để test -- 
	WAITFOR DELAY '00:00:05'
	IF EXISTS (
		SELECT * FROM DONHANG
		WHERE MADONHANG = @MADONHANG AND TINHTRANG = N'Đang chuẩn bị'
	)
	BEGIN
		RAISERROR(N'Đơn hàng đã chuẩn bị không thể hủy!!!', 16, 1)
		ROLLBACK
		RETURN 0
	END

	UPDATE DONHANG
	SET TINHTRANG = N'Đã Hủy', TONGTIEN = 0
	WHERE MADONHANG = @MADONHANG

	COMMIT TRAN
	RETURN 1
GO

CREATE PROCEDURE sp_CapNhatDonLostUpdateFix @MADONHANG VARCHAR(10), @TINHTRANG NVARCHAR(20)
AS
BEGIN TRAN
SET TRAN ISOLATION LEVEL REPEATABLE READ
	DECLARE @TONGTIEN FLOAT
	DECLARE @TINHTRANG_HT NVARCHAR(20)
	SELECT @TONGTIEN = TONGTIEN, @TINHTRANG_HT = TINHTRANG
	FROM DONHANG
	WHERE MADONHANG = @MADONHANG

	UPDATE DONHANG
	SET TINHTRANG = @TINHTRANG, TONGTIEN = @TONGTIEN
	WHERE MADONHANG = @MADONHANG
	COMMIT TRAN
	RETURN 1
GO 
